from pyspark.sql import SparkSession
from pyspark.sql import functions as F
from io import BytesIO
import re

# Create a SparkSession to initiate the processing environment
spark = SparkSession.builder.master("local[*]").appName("OnePieceBountyAnalysis").getOrCreate()

# Load the One Piece dataset from a local CSV file
df = spark.read.csv("C:...", header=True, inferSchema=True)

# Display initial data for inspection
print("First 5 rows:")
df.show(5)

# Get summary statistics of the dataset
print("Data Description:")
df.describe().show()

# Count the total number of rows in the dataset
num_filas = df.count()
print(f"The table has {num_filas} rows.")

# Print the schema of the DataFrame (column names and data types)
schema = df.schema
print("DataFrame Schema:")
for field in schema.fields:
    print(f"Column: {field.name}, Type: {field.dataType}, Max Length: {field.metadata.get('maxlength', 'N/A')}")

# Create a temporary view for SQL queries
df.createOrReplaceTempView("Onpiece1_vw")

# Select distinct 'Official English Name' and 'Total Bounty' (excluding null bounties) using SQL
df_seleccionado = spark.sql("SELECT DISTINCT `Official English Name`,`Total Bounty` FROM Onpiece1_VW WHERE `Total Bounty` is not null")
df_seleccionado.show()

# Data Cleaning and Transformation

# Remove bounty tags (e.g., [bounty 1]) from 'Total Bounty'
df = df_seleccionado.withColumn("Total Bounty_N", F.regexp_replace(col("Total Bounty"), r"\[bounty \d+\]", ""))

# Split the cleaned 'Total Bounty_N' into multiple bounties using commas and "At least" as delimiters
df = df.withColumn("Bounties", F.split(col("Total Bounty_N"), r"At least|, "))

# Extract the last bounty from the 'Bounties' array
df = df.withColumn("Ultima Recompensa", F.element_at(col("Bounties"), -1))

# Clean the extracted last bounty by removing non-numeric characters
df = df.withColumn("Ultima Recompensa_N", F.regexp_replace(col("Ultima Recompensa"), "[^0-9]", ""))

# Convert the cleaned last bounty to a big integer for numerical calculations
df = df.withColumn("Ultima Recompensa", col("Ultima Recompensa_N").cast("bigint"))

# Filter the DataFrame to keep only rows where the last bounty is between 10,000 and 1,140,110,000
df_filtered = df.filter((col("Ultima Recompensa") > 10000) & (col("Ultima Recompensa") <= 11401100000))

# Display the final results: character name and their highest bounty
print("After filtering the values:")
df_filtered.select("Official English Name", "Ultima Recompensa").show(truncate=False)
